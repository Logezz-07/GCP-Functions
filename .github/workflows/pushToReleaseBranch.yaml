name: pushToReleaseBranch

on:
  workflow_dispatch:

jobs:
  syntax-check-and-release:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout Code from Dev Branch
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Authenticate to Google Cloud (without committing creds)
      - name: Auth to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 4️⃣ Authenticate with Artifact Registry
      - name: Authenticate with Artifact Registry
        run: npm run artifactregistry-login

      # 5️⃣ Install Dependencies
      - name: Install Dependencies
        run: npm ci

      # 6️⃣ Run TypeScript Syntax Check
      - name: Run TypeScript Syntax Check
        run: |
          npm run check-syntax
          echo "✅ TypeScript syntax check completed successfully!"

      # 7️⃣ Generate Custom Version and Push to Release Branch
      - name: Push to Release Branch with Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FUNCTIONS_LIST: ${{ secrets.FUNCTIONS_LIST }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          echo "🚀 Switching to release branch..."
          git checkout -B release

          # Convert comma-separated FUNCTIONS_LIST to space-separated
          FUNCTIONS_LIST=$(echo "$FUNCTIONS_LIST" | tr ',' ' ')
          echo "🔍 Checking for changes in functions: $FUNCTIONS_LIST"

          CHANGE_FOUND=0
          for func in $FUNCTIONS_LIST; do
            if ! git diff --quiet release..dev -- "$func"; then
              echo "⚡ Changes detected in $func"
              CHANGE_FOUND=1
              break
            fi
          done

          if [ $CHANGE_FOUND -eq 1 ]; then
            echo "🧹 Cleaning release branch (removing node_modules, secrets, etc.)..."
            rm -rf node_modules
            rm -f gha-creds*.json .npmrc version.txt package-lock.json package.json tsconfig.json

            echo "📦 Staging all files..."
            git add .

            echo "💾 Committing changes..."
            git commit -m "Prepare release branch (removed root-level files)"
            git push origin release --force

            echo "🏷 Generating new version tag..."
            LATEST_TAG=$(git tag --list "R4B-Function-v*" --sort=-v:refname | head -n1)
            if [ -z "$LATEST_TAG" ]; then
              NEXT_VERSION=1
            else
              NUM=$(echo $LATEST_TAG | sed 's/R4B-Function-v//')
              NEXT_VERSION=$((NUM + 1))
            fi

            VERSION="R4B-Function-v$NEXT_VERSION"
            git tag $VERSION
            git push origin $VERSION
            echo "✅ Tag $VERSION created and pushed successfully!"
          else
            echo "ℹ️ No changes detected in FUNCTIONS_LIST. Skipping commit and version increment."
            LATEST_TAG=$(git tag --list "R4B-Function-v*" --sort=-v:refname | head -n1)
            VERSION=$LATEST_TAG
            echo "🏷 Current version remains: $VERSION"
          fi

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
